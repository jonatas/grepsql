<Project Sdk="Microsoft.NET.Sdk">

  <PropertyGroup>
    <TargetFrameworks>net8.0</TargetFrameworks>
    <LangVersion>latest</LangVersion>
    <Nullable>enable</Nullable>
    <AllowUnsafeBlocks>true</AllowUnsafeBlocks>
    <PackageId>PgQuery.NET</PackageId>
    <PackageVersion>0.0.1</PackageVersion>
    <Title>PgQuery.NET</Title>
    <Authors>Jônatas Davi Paganini</Authors>
    <Description>A .NET wrapper for libpg_query - parse, normalize, and fingerprint PostgreSQL queries using the actual PostgreSQL parser</Description>
    <PackageTags>postgresql;sql;parser;ast;libpg_query;pgquery</PackageTags>
    <RepositoryUrl>https://github.com/jonatas/pgquery-dotnet</RepositoryUrl>
    <PackageLicenseExpression>MIT</PackageLicenseExpression>
    <PackageRequireLicenseAcceptance>false</PackageRequireLicenseAcceptance>
    <GeneratePackageOnBuild>true</GeneratePackageOnBuild>
    <IncludeSymbols>true</IncludeSymbols>
    <SymbolPackageFormat>snupkg</SymbolPackageFormat>
  </PropertyGroup>

  <PropertyGroup Condition="$([MSBuild]::IsOSPlatform('OSX'))">
    <DefineConstants>__MACOS__</DefineConstants>
  </PropertyGroup>

  <PropertyGroup Condition="$([MSBuild]::IsOSPlatform('Linux'))">
    <DefineConstants>__LINUX__</DefineConstants>
  </PropertyGroup>

  <PropertyGroup Condition="$([MSBuild]::IsOSPlatform('Windows'))">
    <DefineConstants>__WINDOWS__</DefineConstants>
  </PropertyGroup>

  <PropertyGroup>
    <!-- Define native library names for different platforms -->
    <PgQueryLibWin>pg_query.dll</PgQueryLibWin>
    <PgQueryLibLinux>libpg_query.so</PgQueryLibLinux>
    <PgQueryLibMac>libpg_query.dylib</PgQueryLibMac>
    <PgQueryWrapperWin>pgquery_wrapper.dll</PgQueryWrapperWin>
    <PgQueryWrapperLinux>libpgquery_wrapper.so</PgQueryWrapperLinux>
    <PgQueryWrapperMac>libpgquery_wrapper.dylib</PgQueryWrapperMac>
  </PropertyGroup>

  <ItemGroup>
    <PackageReference Include="Google.Protobuf" Version="3.31.1" />
    <PackageReference Include="Google.Protobuf.Tools" Version="3.31.1" />
    <PackageReference Include="Grpc.Tools" Version="2.72.0">
      <IncludeAssets>runtime; build; native; contentfiles; analyzers; buildtransitive</IncludeAssets>
      <PrivateAssets>all</PrivateAssets>
    </PackageReference>
  </ItemGroup>

  <!-- Native libraries for Windows -->
  <ItemGroup Condition="$([MSBuild]::IsOSPlatform('Windows'))">
    <Content Include="runtimes\win-x64\native\$(PgQueryLibWin)">
      <CopyToOutputDirectory>PreserveNewest</CopyToOutputDirectory>
      <PackagePath>runtimes\win-x64\native\$(PgQueryLibWin)</PackagePath>
      <Pack>true</Pack>
    </Content>
    <Content Include="runtimes\win-x64\native\$(PgQueryWrapperWin)">
      <CopyToOutputDirectory>PreserveNewest</CopyToOutputDirectory>
      <PackagePath>runtimes\win-x64\native\$(PgQueryWrapperWin)</PackagePath>
      <Pack>true</Pack>
    </Content>
    <Content Include="runtimes\win-x86\native\$(PgQueryLibWin)">
      <CopyToOutputDirectory>PreserveNewest</CopyToOutputDirectory>
      <PackagePath>runtimes\win-x86\native\$(PgQueryLibWin)</PackagePath>
      <Pack>true</Pack>
    </Content>
    <Content Include="runtimes\win-x86\native\$(PgQueryWrapperWin)">
      <CopyToOutputDirectory>PreserveNewest</CopyToOutputDirectory>
      <PackagePath>runtimes\win-x86\native\$(PgQueryWrapperWin)</PackagePath>
      <Pack>true</Pack>
    </Content>
    <Content Include="runtimes\win-arm64\native\$(PgQueryLibWin)">
      <CopyToOutputDirectory>PreserveNewest</CopyToOutputDirectory>
      <PackagePath>runtimes\win-arm64\native\$(PgQueryLibWin)</PackagePath>
      <Pack>true</Pack>
    </Content>
    <Content Include="runtimes\win-arm64\native\$(PgQueryWrapperWin)">
      <CopyToOutputDirectory>PreserveNewest</CopyToOutputDirectory>
      <PackagePath>runtimes\win-arm64\native\$(PgQueryWrapperWin)</PackagePath>
      <Pack>true</Pack>
    </Content>
    
    <!-- Fallback: Copy wrapper library directly to output directory for better compatibility -->
    <Content Include="runtimes\win-x64\native\$(PgQueryWrapperWin)">
      <CopyToOutputDirectory>PreserveNewest</CopyToOutputDirectory>
      <Link>$(PgQueryWrapperWin)</Link>
    </Content>
  </ItemGroup>

  <!-- Native libraries for Linux -->
  <ItemGroup Condition="$([MSBuild]::IsOSPlatform('Linux'))">
    <Content Include="runtimes\linux-x64\native\$(PgQueryLibLinux)">
      <CopyToOutputDirectory>PreserveNewest</CopyToOutputDirectory>
      <PackagePath>runtimes\linux-x64\native\$(PgQueryLibLinux)</PackagePath>
      <Pack>true</Pack>
    </Content>
    <Content Include="runtimes\linux-x64\native\$(PgQueryWrapperLinux)">
      <CopyToOutputDirectory>PreserveNewest</CopyToOutputDirectory>
      <PackagePath>runtimes\linux-x64\native\$(PgQueryWrapperLinux)</PackagePath>
      <Pack>true</Pack>
    </Content>
    <Content Include="runtimes\linux-arm64\native\$(PgQueryLibLinux)">
      <CopyToOutputDirectory>PreserveNewest</CopyToOutputDirectory>
      <PackagePath>runtimes\linux-arm64\native\$(PgQueryLibLinux)</PackagePath>
      <Pack>true</Pack>
    </Content>
    <Content Include="runtimes\linux-arm64\native\$(PgQueryWrapperLinux)">
      <CopyToOutputDirectory>PreserveNewest</CopyToOutputDirectory>
      <PackagePath>runtimes\linux-arm64\native\$(PgQueryWrapperLinux)</PackagePath>
      <Pack>true</Pack>
    </Content>
    
    <!-- Fallback: Copy wrapper library directly to output directory for better compatibility -->
    <Content Include="runtimes\linux-x64\native\$(PgQueryWrapperLinux)">
      <CopyToOutputDirectory>PreserveNewest</CopyToOutputDirectory>
      <Link>$(PgQueryWrapperLinux)</Link>
    </Content>
  </ItemGroup>

  <!-- Native libraries for macOS -->
  <ItemGroup Condition="$([MSBuild]::IsOSPlatform('OSX'))">
    <Content Include="runtimes\osx-x64\native\$(PgQueryLibMac)">
      <CopyToOutputDirectory>PreserveNewest</CopyToOutputDirectory>
      <PackagePath>runtimes\osx-x64\native\$(PgQueryLibMac)</PackagePath>
      <Pack>true</Pack>
    </Content>
    <Content Include="runtimes\osx-x64\native\$(PgQueryWrapperMac)">
      <CopyToOutputDirectory>PreserveNewest</CopyToOutputDirectory>
      <PackagePath>runtimes\osx-x64\native\$(PgQueryWrapperMac)</PackagePath>
      <Pack>true</Pack>
    </Content>
    <Content Include="runtimes\osx-arm64\native\$(PgQueryLibMac)">
      <CopyToOutputDirectory>PreserveNewest</CopyToOutputDirectory>
      <PackagePath>runtimes\osx-arm64\native\$(PgQueryLibMac)</PackagePath>
      <Pack>true</Pack>
    </Content>
    <Content Include="runtimes\osx-arm64\native\$(PgQueryWrapperMac)">
      <CopyToOutputDirectory>PreserveNewest</CopyToOutputDirectory>
      <PackagePath>runtimes\osx-arm64\native\$(PgQueryWrapperMac)</PackagePath>
      <Pack>true</Pack>
    </Content>
    
    <!-- Fallback: Copy wrapper library directly to output directory for better compatibility -->
    <Content Include="runtimes\osx-arm64\native\$(PgQueryWrapperMac)">
      <CopyToOutputDirectory>PreserveNewest</CopyToOutputDirectory>
      <Link>$(PgQueryWrapperMac)</Link>
    </Content>
  </ItemGroup>
</Project>

