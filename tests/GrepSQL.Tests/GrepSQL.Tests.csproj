<Project Sdk="Microsoft.NET.Sdk">

  <ItemGroup>
    <ProjectReference Include="..\..\src\GrepSQL\GrepSQL.csproj" />
  </ItemGroup>

  <ItemGroup>
    <PackageReference Include="Microsoft.NET.Test.Sdk" Version="17.14.1" />
    <PackageReference Include="xunit" Version="2.9.3" />
    <PackageReference Include="xunit.runner.visualstudio" Version="3.1.1">
      <IncludeAssets>runtime; build; native; contentfiles; analyzers; buildtransitive</IncludeAssets>
      <PrivateAssets>all</PrivateAssets>
    </PackageReference>
    <PackageReference Include="coverlet.collector" Version="6.0.4">
      <IncludeAssets>runtime; build; native; contentfiles; analyzers; buildtransitive</IncludeAssets>
      <PrivateAssets>all</PrivateAssets>
    </PackageReference>
  </ItemGroup>

  <ItemGroup>
    <Content Include="runtimes\**\*">
      <CopyToOutputDirectory>PreserveNewest</CopyToOutputDirectory>
    </Content>
  </ItemGroup>

  <PropertyGroup>
    <TargetFramework>net9.0</TargetFramework>
    <ImplicitUsings>enable</ImplicitUsings>
    <Nullable>enable</Nullable>
    <IsPackable>false</IsPackable>
    <IsTestProject>true</IsTestProject>
  </PropertyGroup>

  <PropertyGroup Condition="$([MSBuild]::IsOSPlatform('OSX'))">
    <DefineConstants>__MACOS__</DefineConstants>
  </PropertyGroup>

  <PropertyGroup Condition="$([MSBuild]::IsOSPlatform('Linux'))">
    <DefineConstants>__LINUX__</DefineConstants>
  </PropertyGroup>

  <PropertyGroup Condition="$([MSBuild]::IsOSPlatform('Windows'))">
    <DefineConstants>__WINDOWS__</DefineConstants>
  </PropertyGroup>
  <Target Name="CopyNativeLibraryForTests" AfterTargets="Build">
    <PropertyGroup>
      <NativeLibSourceFolder>$(SolutionDir)src/GrepSQL/runtimes/$(RuntimeIdentifier)/native/</NativeLibSourceFolder>
      <NativeLibFile>$([System.IO.Directory]::GetFiles($(NativeLibSourceFolder),
        'libpgquery_wrapper.*')[0])</NativeLibFile>
    </PropertyGroup>

    <Message Text="[CI-TEST-FIX] Suche nach nativer Bibliothek: $(NativeLibFile)" Importance="high" />

    <Copy
      SourceFiles="$(NativeLibFile)"
      DestinationFolder="$(OutDir)"
      SkipUnchangedFiles="true"
      Condition="Exists('$(NativeLibFile)')"
    />

    <Message Text="[CI-TEST-FIX] Kopieren nach $(OutDir) war erfolgreich." Importance="high"
      Condition="Exists('$(OutDir)$(NativeLibFile.Substring($(NativeLibSourceFolder.Length)))')" />
  </Target>
</Project>